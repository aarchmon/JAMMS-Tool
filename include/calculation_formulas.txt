Source: 
https://codingandfun.com/portfolio-risk-and-returns-python/
https://towardsdatascience.com/calculating-sharpe-ratio-with-python-755dcb346805
----
1. Bonds (proxy: AGG ETF)
2. Stocks (proxy: SPY ETF)
3. Cryptocurrency (proxy: BTC)

a = allocation to bonds
b = allocation to stocks
c = allocation to crypto
----
# Calculations
*Please note we need to annualize all data for comparison. Since we have daily data, we will need to annualize based on each time frame we are viewing

## Portfolio Average Annualized Return
# Calculate average annualized returns for SPY, AGG, BTC
Portfolio return = a*(return of bonds) + b*(return of stocks) + c*(return of crypto) == sum of (weight x return of asset class)
1. get daily closing price of SPY, AGG, BTC
2. Get daily_return = price.pct_change()
3. Get average_daily_return = daily_return.mean()
4. Gt average_annual_return by multiplying average daily returns by 252
4. Use the `concat` function to combine the 3 DataFrames for SPY, AGG, BTC
5. Assign weights for each risk profile
    * Conservative 
    * Moderate
    * Aggressive

## Portfolio Volatility
portfolio_standard_deviation = (portfolio_variance)^1/2
1. calculate portfolio variance = [variance(aX + bY + cZ)]...calculation is a bit complex but you can use .var()
2. calculate portfolio standard deviation = (portfolio variance)^1/2...you can use numpy function .std()
annualized_vol = annualized_returns.std()*np.sqrt(250)

    * Conservative
    * Moderate
    * Aggressive
    
## Portfolio Sharpe Ratio
Portfolio Sharpe Ratio = Return of portfolio / standard deviation of returns
1. average_annualized_sharpe_ratio = average_annualized_return / average_annualized_standard_deviation
alternatively: (daily_returns.mean() * 252) / (daily_returns.std() * np.sqrt(252))

    * Conservative
    * Moderate
    * Aggressive

---
Repeat each step with different risk profile with relative allocation/weights
Repeact each risk profile for view over 1, 5, 20 yr time frame against a specific stock of choosing